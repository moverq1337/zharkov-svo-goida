// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0
// source: doctor/doctor.proto

package doctor

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FinalVerdictRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Verdict bool   `protobuf:"varint,2,opt,name=verdict,proto3" json:"verdict,omitempty"`
}

func (x *FinalVerdictRq) Reset() {
	*x = FinalVerdictRq{}
	mi := &file_doctor_doctor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalVerdictRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalVerdictRq) ProtoMessage() {}

func (x *FinalVerdictRq) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalVerdictRq.ProtoReflect.Descriptor instead.
func (*FinalVerdictRq) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{0}
}

func (x *FinalVerdictRq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FinalVerdictRq) GetVerdict() bool {
	if x != nil {
		return x.Verdict
	}
	return false
}

type CreateRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Cabinet string `protobuf:"bytes,3,opt,name=cabinet,proto3" json:"cabinet,omitempty"`
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreateRq) Reset() {
	*x = CreateRq{}
	mi := &file_doctor_doctor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRq) ProtoMessage() {}

func (x *CreateRq) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRq.ProtoReflect.Descriptor instead.
func (*CreateRq) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRq) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *CreateRq) GetCabinet() string {
	if x != nil {
		return x.Cabinet
	}
	return ""
}

func (x *CreateRq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NextRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId string `protobuf:"bytes,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Verdict  bool   `protobuf:"varint,3,opt,name=verdict,proto3" json:"verdict,omitempty"`
}

func (x *NextRq) Reset() {
	*x = NextRq{}
	mi := &file_doctor_doctor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextRq) ProtoMessage() {}

func (x *NextRq) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextRq.ProtoReflect.Descriptor instead.
func (*NextRq) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{2}
}

func (x *NextRq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *NextRq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NextRq) GetVerdict() bool {
	if x != nil {
		return x.Verdict
	}
	return false
}

type NextRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
}

func (x *NextRs) Reset() {
	*x = NextRs{}
	mi := &file_doctor_doctor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextRs) ProtoMessage() {}

func (x *NextRs) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextRs.ProtoReflect.Descriptor instead.
func (*NextRs) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{3}
}

func (x *NextRs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NextRs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NextRs) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

type GetHistoryRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHistoryRq) Reset() {
	*x = GetHistoryRq{}
	mi := &file_doctor_doctor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRq) ProtoMessage() {}

func (x *GetHistoryRq) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRq.ProtoReflect.Descriptor instead.
func (*GetHistoryRq) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{4}
}

func (x *GetHistoryRq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetHistoryRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetHistoryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetHistoryRs) Reset() {
	*x = GetHistoryRs{}
	mi := &file_doctor_doctor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRs) ProtoMessage() {}

func (x *GetHistoryRs) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRs.ProtoReflect.Descriptor instead.
func (*GetHistoryRs) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{5}
}

func (x *GetHistoryRs) GetItems() []*GetHistoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetHistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	EndTime string `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetHistoryItem) Reset() {
	*x = GetHistoryItem{}
	mi := &file_doctor_doctor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryItem) ProtoMessage() {}

func (x *GetHistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryItem.ProtoReflect.Descriptor instead.
func (*GetHistoryItem) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{6}
}

func (x *GetHistoryItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetHistoryItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetHistoryItem) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *GetHistoryItem) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type GetDoctorInfoRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDoctorInfoRq) Reset() {
	*x = GetDoctorInfoRq{}
	mi := &file_doctor_doctor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorInfoRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorInfoRq) ProtoMessage() {}

func (x *GetDoctorInfoRq) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorInfoRq.ProtoReflect.Descriptor instead.
func (*GetDoctorInfoRq) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{7}
}

func (x *GetDoctorInfoRq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDoctorInfoRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	Cabinet string `protobuf:"bytes,4,opt,name=cabinet,proto3" json:"cabinet,omitempty"`
	Type    string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetDoctorInfoRs) Reset() {
	*x = GetDoctorInfoRs{}
	mi := &file_doctor_doctor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorInfoRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorInfoRs) ProtoMessage() {}

func (x *GetDoctorInfoRs) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorInfoRs.ProtoReflect.Descriptor instead.
func (*GetDoctorInfoRs) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{8}
}

func (x *GetDoctorInfoRs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDoctorInfoRs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDoctorInfoRs) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *GetDoctorInfoRs) GetCabinet() string {
	if x != nil {
		return x.Cabinet
	}
	return ""
}

func (x *GetDoctorInfoRs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetAllDoctorsRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doctors []*DoctorItem `protobuf:"bytes,1,rep,name=doctors,proto3" json:"doctors,omitempty"`
}

func (x *GetAllDoctorsRs) Reset() {
	*x = GetAllDoctorsRs{}
	mi := &file_doctor_doctor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDoctorsRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDoctorsRs) ProtoMessage() {}

func (x *GetAllDoctorsRs) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDoctorsRs.ProtoReflect.Descriptor instead.
func (*GetAllDoctorsRs) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllDoctorsRs) GetDoctors() []*DoctorItem {
	if x != nil {
		return x.Doctors
	}
	return nil
}

type DoctorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	Cabinet string `protobuf:"bytes,4,opt,name=cabinet,proto3" json:"cabinet,omitempty"`
	Type    string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DoctorItem) Reset() {
	*x = DoctorItem{}
	mi := &file_doctor_doctor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoctorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorItem) ProtoMessage() {}

func (x *DoctorItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorItem.ProtoReflect.Descriptor instead.
func (*DoctorItem) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{10}
}

func (x *DoctorItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DoctorItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DoctorItem) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *DoctorItem) GetCabinet() string {
	if x != nil {
		return x.Cabinet
	}
	return ""
}

func (x *DoctorItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_doctor_doctor_proto protoreflect.FileDescriptor

var file_doctor_doctor_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x42, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74,
	0x52, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x64, 0x69, 0x63, 0x74, 0x22, 0x66, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x06,
	0x4e, 0x65, 0x78, 0x74, 0x52, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x64, 0x69, 0x63, 0x74, 0x22, 0x46, 0x0a, 0x06, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x12, 0x25, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x21, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x7d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x78, 0x0a, 0x0a, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x32, 0xa0, 0x01, 0x0a, 0x10, 0x54, 0x68, 0x65, 0x72, 0x61, 0x70, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74,
	0x12, 0x07, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x71, 0x1a, 0x07, 0x2e, 0x4e, 0x65, 0x78, 0x74,
	0x52, 0x73, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f,
	0x74, 0x68, 0x65, 0x72, 0x61, 0x70, 0x69, 0x73, 0x74, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x56,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x12, 0x0f,
	0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a,
	0x01, 0x2a, 0x22, 0x12, 0x2f, 0x74, 0x68, 0x65, 0x72, 0x61, 0x70, 0x69, 0x73, 0x74, 0x2f, 0x76,
	0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x32, 0xea, 0x02, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x09, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a,
	0x22, 0x0e, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x07, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x52,
	0x71, 0x1a, 0x07, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x73, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x71,
	0x1a, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x71, 0x1a, 0x10, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x73, 0x22, 0x13,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x61, 0x6c, 0x6c, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6e, 0x65, 0x69, 0x61, 0x73, 0x69, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doctor_doctor_proto_rawDescOnce sync.Once
	file_doctor_doctor_proto_rawDescData = file_doctor_doctor_proto_rawDesc
)

func file_doctor_doctor_proto_rawDescGZIP() []byte {
	file_doctor_doctor_proto_rawDescOnce.Do(func() {
		file_doctor_doctor_proto_rawDescData = protoimpl.X.CompressGZIP(file_doctor_doctor_proto_rawDescData)
	})
	return file_doctor_doctor_proto_rawDescData
}

var file_doctor_doctor_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_doctor_doctor_proto_goTypes = []any{
	(*FinalVerdictRq)(nil),  // 0: FinalVerdictRq
	(*CreateRq)(nil),        // 1: CreateRq
	(*NextRq)(nil),          // 2: NextRq
	(*NextRs)(nil),          // 3: NextRs
	(*GetHistoryRq)(nil),    // 4: GetHistoryRq
	(*GetHistoryRs)(nil),    // 5: GetHistoryRs
	(*GetHistoryItem)(nil),  // 6: GetHistoryItem
	(*GetDoctorInfoRq)(nil), // 7: GetDoctorInfoRq
	(*GetDoctorInfoRs)(nil), // 8: GetDoctorInfoRs
	(*GetAllDoctorsRs)(nil), // 9: GetAllDoctorsRs
	(*DoctorItem)(nil),      // 10: DoctorItem
	(*emptypb.Empty)(nil),   // 11: google.protobuf.Empty
}
var file_doctor_doctor_proto_depIdxs = []int32{
	6,  // 0: GetHistoryRs.items:type_name -> GetHistoryItem
	10, // 1: GetAllDoctorsRs.doctors:type_name -> DoctorItem
	2,  // 2: TherapistService.Next:input_type -> NextRq
	0,  // 3: TherapistService.FinalVerdict:input_type -> FinalVerdictRq
	1,  // 4: DoctorService.Create:input_type -> CreateRq
	2,  // 5: DoctorService.Next:input_type -> NextRq
	4,  // 6: DoctorService.GetHistory:input_type -> GetHistoryRq
	7,  // 7: DoctorService.GetDoctorInfo:input_type -> GetDoctorInfoRq
	11, // 8: DoctorService.GetAllDoctors:input_type -> google.protobuf.Empty
	3,  // 9: TherapistService.Next:output_type -> NextRs
	11, // 10: TherapistService.FinalVerdict:output_type -> google.protobuf.Empty
	11, // 11: DoctorService.Create:output_type -> google.protobuf.Empty
	3,  // 12: DoctorService.Next:output_type -> NextRs
	5,  // 13: DoctorService.GetHistory:output_type -> GetHistoryRs
	8,  // 14: DoctorService.GetDoctorInfo:output_type -> GetDoctorInfoRs
	9,  // 15: DoctorService.GetAllDoctors:output_type -> GetAllDoctorsRs
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_doctor_doctor_proto_init() }
func file_doctor_doctor_proto_init() {
	if File_doctor_doctor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doctor_doctor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_doctor_doctor_proto_goTypes,
		DependencyIndexes: file_doctor_doctor_proto_depIdxs,
		MessageInfos:      file_doctor_doctor_proto_msgTypes,
	}.Build()
	File_doctor_doctor_proto = out.File
	file_doctor_doctor_proto_rawDesc = nil
	file_doctor_doctor_proto_goTypes = nil
	file_doctor_doctor_proto_depIdxs = nil
}
