// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: comission/commission.proto

package comission

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddDoctorRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Cabient string `protobuf:"bytes,3,opt,name=cabient,proto3" json:"cabient,omitempty"`
}

func (x *AddDoctorRq) Reset() {
	*x = AddDoctorRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comission_commission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDoctorRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDoctorRq) ProtoMessage() {}

func (x *AddDoctorRq) ProtoReflect() protoreflect.Message {
	mi := &file_comission_commission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDoctorRq.ProtoReflect.Descriptor instead.
func (*AddDoctorRq) Descriptor() ([]byte, []int) {
	return file_comission_commission_proto_rawDescGZIP(), []int{0}
}

func (x *AddDoctorRq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDoctorRq) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *AddDoctorRq) GetCabient() string {
	if x != nil {
		return x.Cabient
	}
	return ""
}

type AddDoctorRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Cabient string `protobuf:"bytes,3,opt,name=cabient,proto3" json:"cabient,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddDoctorRs) Reset() {
	*x = AddDoctorRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comission_commission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDoctorRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDoctorRs) ProtoMessage() {}

func (x *AddDoctorRs) ProtoReflect() protoreflect.Message {
	mi := &file_comission_commission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDoctorRs.ProtoReflect.Descriptor instead.
func (*AddDoctorRs) Descriptor() ([]byte, []int) {
	return file_comission_commission_proto_rawDescGZIP(), []int{1}
}

func (x *AddDoctorRs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDoctorRs) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *AddDoctorRs) GetCabient() string {
	if x != nil {
		return x.Cabient
	}
	return ""
}

func (x *AddDoctorRs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddConscriptRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname    string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Patronymic string `protobuf:"bytes,3,opt,name=patronymic,proto3" json:"patronymic,omitempty"`
	Age        int32  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *AddConscriptRq) Reset() {
	*x = AddConscriptRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comission_commission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConscriptRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConscriptRq) ProtoMessage() {}

func (x *AddConscriptRq) ProtoReflect() protoreflect.Message {
	mi := &file_comission_commission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConscriptRq.ProtoReflect.Descriptor instead.
func (*AddConscriptRq) Descriptor() ([]byte, []int) {
	return file_comission_commission_proto_rawDescGZIP(), []int{2}
}

func (x *AddConscriptRq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddConscriptRq) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *AddConscriptRq) GetPatronymic() string {
	if x != nil {
		return x.Patronymic
	}
	return ""
}

func (x *AddConscriptRq) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

type AddConscriptRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname    string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Patronymic string `protobuf:"bytes,3,opt,name=patronymic,proto3" json:"patronymic,omitempty"`
	Age        int32  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Id         string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddConscriptRs) Reset() {
	*x = AddConscriptRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comission_commission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConscriptRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConscriptRs) ProtoMessage() {}

func (x *AddConscriptRs) ProtoReflect() protoreflect.Message {
	mi := &file_comission_commission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConscriptRs.ProtoReflect.Descriptor instead.
func (*AddConscriptRs) Descriptor() ([]byte, []int) {
	return file_comission_commission_proto_rawDescGZIP(), []int{3}
}

func (x *AddConscriptRs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddConscriptRs) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *AddConscriptRs) GetPatronymic() string {
	if x != nil {
		return x.Patronymic
	}
	return ""
}

func (x *AddConscriptRs) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *AddConscriptRs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDocotrRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId string `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
}

func (x *GetDocotrRq) Reset() {
	*x = GetDocotrRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comission_commission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocotrRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocotrRq) ProtoMessage() {}

func (x *GetDocotrRq) ProtoReflect() protoreflect.Message {
	mi := &file_comission_commission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocotrRq.ProtoReflect.Descriptor instead.
func (*GetDocotrRq) Descriptor() ([]byte, []int) {
	return file_comission_commission_proto_rawDescGZIP(), []int{4}
}

func (x *GetDocotrRq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

type GetDoctorRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Cabient string `protobuf:"bytes,3,opt,name=cabient,proto3" json:"cabient,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDoctorRs) Reset() {
	*x = GetDoctorRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comission_commission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorRs) ProtoMessage() {}

func (x *GetDoctorRs) ProtoReflect() protoreflect.Message {
	mi := &file_comission_commission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorRs.ProtoReflect.Descriptor instead.
func (*GetDoctorRs) Descriptor() ([]byte, []int) {
	return file_comission_commission_proto_rawDescGZIP(), []int{5}
}

func (x *GetDoctorRs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDoctorRs) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *GetDoctorRs) GetCabient() string {
	if x != nil {
		return x.Cabient
	}
	return ""
}

func (x *GetDoctorRs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_comission_commission_proto protoreflect.FileDescriptor

var file_comission_commission_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x76, 0x6f,
	0x65, 0x6e, 0x6b, 0x6f, 0x6d, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x71, 0x12, 0x30, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x92, 0x41, 0x19, 0x2a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x11, 0xd0, 0x98, 0xd0, 0xbc, 0xd1, 0x8f, 0x20, 0xd0, 0xb2,
	0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41,
	0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x27, 0x92, 0x41, 0x24, 0x2a, 0x07, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x19, 0xd0,
	0xa4, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0xb2,
	0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x61, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x07, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74,
	0x32, 0x19, 0xd0, 0x9a, 0xd0, 0xb0, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb5, 0xd1, 0x82,
	0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x07, 0x63, 0x61, 0x62,
	0x69, 0x65, 0x6e, 0x74, 0x3a, 0x19, 0x92, 0x41, 0x16, 0x0a, 0x14, 0x2a, 0x12, 0x41, 0x64, 0x64,
	0x20, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x89, 0x02, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x73, 0x12,
	0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x92,
	0x41, 0x19, 0x2a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x11, 0xd0, 0x98, 0xd0, 0xbc, 0xd1, 0x8f,
	0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x07, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x32, 0x19, 0xd0, 0xa4, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x8f,
	0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x07, 0x73, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x61, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x07, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x65, 0x74, 0x32, 0x19, 0xd0, 0x9a, 0xd0, 0xb0, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0,
	0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x07,
	0x63, 0x61, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x2a, 0x02, 0x49, 0x64, 0x32, 0x0d, 0x49, 0x64,
	0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x02, 0x69, 0x64, 0x3a,
	0x1a, 0x92, 0x41, 0x17, 0x0a, 0x15, 0x2a, 0x13, 0x41, 0x64, 0x64, 0x20, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x20, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x71, 0x12, 0x3e,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0x92, 0x41,
	0x27, 0x2a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x1f, 0xd0, 0x98, 0xd0, 0xbc, 0xd1, 0x8f, 0x20,
	0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0,
	0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f,
	0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x35, 0x92, 0x41, 0x32, 0x2a, 0x07, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x27, 0xd0,
	0xa4, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0xbf,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82,
	0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x5a, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x3a, 0x92, 0x41, 0x37, 0x2a, 0x0a, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6e,
	0x79, 0x6d, 0x69, 0x63, 0x32, 0x29, 0xd0, 0x9e, 0xd1, 0x82, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81,
	0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0,
	0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52,
	0x0a, 0x70, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x12, 0x43, 0x0a, 0x03, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x31, 0x92, 0x41, 0x2e, 0x2a, 0x03, 0x41,
	0x67, 0x65, 0x32, 0x27, 0xd0, 0x92, 0xd0, 0xbe, 0xd0, 0xb7, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x81,
	0xd1, 0x82, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0,
	0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x3a, 0x1c, 0x92, 0x41, 0x19, 0x0a, 0x17, 0x2a, 0x15, 0x41, 0x64, 0x64, 0x20, 0x43, 0x6f, 0x6e,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x96,
	0x03, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x73, 0x12, 0x3e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2a, 0x92, 0x41, 0x27, 0x2a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x1f, 0xd0, 0x98, 0xd0, 0xbc,
	0xd1, 0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0,
	0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x4f, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x35, 0x92, 0x41, 0x32, 0x2a, 0x07, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x32, 0x27, 0xd0, 0xa4, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x8f,
	0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0,
	0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0x92, 0x41, 0x37, 0x2a, 0x0a, 0x50, 0x61, 0x74,
	0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x32, 0x29, 0xd0, 0x9e, 0xd1, 0x82, 0xd1, 0x87, 0xd0,
	0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb,
	0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb,
	0xd1, 0x8f, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x12, 0x43,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x31, 0x92, 0x41, 0x2e,
	0x2a, 0x03, 0x41, 0x67, 0x65, 0x32, 0x27, 0xd0, 0x92, 0xd0, 0xbe, 0xd0, 0xb7, 0xd1, 0x80, 0xd0,
	0xb0, 0xd1, 0x81, 0xd1, 0x82, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7,
	0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x03,
	0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x24, 0x92, 0x41, 0x21, 0x2a, 0x02, 0x49, 0x64, 0x32, 0x1b, 0x49, 0x64, 0x20, 0xd0, 0xbf, 0xd0,
	0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0,
	0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x1c, 0x92, 0x41, 0x19, 0x0a, 0x17,
	0x2a, 0x15, 0x41, 0x64, 0x64, 0x20, 0x43, 0x6f, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x6f, 0x74, 0x72, 0x52, 0x71, 0x12, 0x3e, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x92, 0x41, 0x1e, 0x2a, 0x09,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x49, 0x64, 0x32, 0x11, 0x49, 0x64, 0x20, 0xd0, 0xb4,
	0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xb0, 0x52, 0x08, 0x64, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x3a, 0x19, 0x92, 0x41, 0x16, 0x0a, 0x14, 0x2a, 0x12, 0x47,
	0x65, 0x74, 0x20, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x89, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x73, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1c, 0x92, 0x41, 0x19, 0x2a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x11, 0xd0, 0x98, 0xd0, 0xbc,
	0xd1, 0x8f, 0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x07, 0x53, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x32, 0x19, 0xd0, 0xa4, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb8,
	0xd1, 0x8f, 0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x07, 0x73,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x61, 0x62, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x07, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x65, 0x74, 0x32, 0x19, 0xd0, 0x9a, 0xd0, 0xb0, 0xd0, 0xb1, 0xd0, 0xb8, 0xd0,
	0xbd, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0,
	0x52, 0x07, 0x63, 0x61, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x2a, 0x02, 0x49, 0x64, 0x32, 0x0d,
	0x49, 0x64, 0x20, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb0, 0x52, 0x02, 0x69,
	0x64, 0x3a, 0x1a, 0x92, 0x41, 0x17, 0x0a, 0x15, 0x2a, 0x13, 0x47, 0x65, 0x74, 0x20, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x20, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbd, 0x04,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x20, 0x2e, 0x76, 0x6f, 0x65, 0x6e, 0x6b, 0x6f, 0x6d, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x71, 0x1a, 0x20, 0x2e, 0x76, 0x6f, 0x65, 0x6e, 0x6b, 0x6f, 0x6d, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x73, 0x22, 0x5d, 0x92, 0x41, 0x3e, 0x12, 0x0a, 0x41, 0x64, 0x64, 0x20, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x30, 0xd0, 0x94, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xb0, 0xd0,
	0xb2, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xbd, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb3, 0xd0, 0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1,
	0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a,
	0x22, 0x11, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0xc3, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x23, 0x2e, 0x76, 0x6f, 0x65, 0x6e, 0x6b, 0x6f, 0x6d, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x71, 0x1a, 0x23, 0x2e, 0x76, 0x6f, 0x65, 0x6e,
	0x6b, 0x6f, 0x6d, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x73, 0x22, 0x69,
	0x92, 0x41, 0x47, 0x12, 0x0d, 0x41, 0x64, 0x64, 0x20, 0x43, 0x6f, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x1a, 0x36, 0xd0, 0x94, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xb0, 0xd0, 0xb2, 0xd0, 0xbb,
	0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0,
	0xbe, 0xd0, 0xb3, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb7, 0xd1, 0x8b,
	0xd0, 0xb2, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0xb1, 0x01, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x2e, 0x76, 0x6f, 0x65, 0x6e, 0x6b, 0x6f,
	0x6d, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x6f, 0x74, 0x72, 0x52, 0x71, 0x1a, 0x20, 0x2e, 0x76, 0x6f, 0x65, 0x6e,
	0x6b, 0x6f, 0x6d, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x73, 0x22, 0x60, 0x92, 0x41, 0x44,
	0x12, 0x0a, 0x47, 0x65, 0x74, 0x20, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x36, 0xd0, 0x94,
	0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xb0, 0xd0, 0xb2, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xb5, 0x20, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb3, 0xd0, 0xbe, 0x20,
	0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb7, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xba, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x1f, 0x5a,
	0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comission_commission_proto_rawDescOnce sync.Once
	file_comission_commission_proto_rawDescData = file_comission_commission_proto_rawDesc
)

func file_comission_commission_proto_rawDescGZIP() []byte {
	file_comission_commission_proto_rawDescOnce.Do(func() {
		file_comission_commission_proto_rawDescData = protoimpl.X.CompressGZIP(file_comission_commission_proto_rawDescData)
	})
	return file_comission_commission_proto_rawDescData
}

var file_comission_commission_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_comission_commission_proto_goTypes = []any{
	(*AddDoctorRq)(nil),    // 0: voenkomat.comission.AddDoctorRq
	(*AddDoctorRs)(nil),    // 1: voenkomat.comission.AddDoctorRs
	(*AddConscriptRq)(nil), // 2: voenkomat.comission.AddConscriptRq
	(*AddConscriptRs)(nil), // 3: voenkomat.comission.AddConscriptRs
	(*GetDocotrRq)(nil),    // 4: voenkomat.comission.GetDocotrRq
	(*GetDoctorRs)(nil),    // 5: voenkomat.comission.GetDoctorRs
}
var file_comission_commission_proto_depIdxs = []int32{
	0, // 0: voenkomat.comission.ComissionService.AddDoctor:input_type -> voenkomat.comission.AddDoctorRq
	2, // 1: voenkomat.comission.ComissionService.AddConscript:input_type -> voenkomat.comission.AddConscriptRq
	4, // 2: voenkomat.comission.ComissionService.GetDoctor:input_type -> voenkomat.comission.GetDocotrRq
	1, // 3: voenkomat.comission.ComissionService.AddDoctor:output_type -> voenkomat.comission.AddDoctorRs
	3, // 4: voenkomat.comission.ComissionService.AddConscript:output_type -> voenkomat.comission.AddConscriptRs
	5, // 5: voenkomat.comission.ComissionService.GetDoctor:output_type -> voenkomat.comission.GetDoctorRs
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_comission_commission_proto_init() }
func file_comission_commission_proto_init() {
	if File_comission_commission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comission_commission_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddDoctorRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comission_commission_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddDoctorRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comission_commission_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddConscriptRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comission_commission_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddConscriptRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comission_commission_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetDocotrRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comission_commission_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetDoctorRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comission_commission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comission_commission_proto_goTypes,
		DependencyIndexes: file_comission_commission_proto_depIdxs,
		MessageInfos:      file_comission_commission_proto_msgTypes,
	}.Build()
	File_comission_commission_proto = out.File
	file_comission_commission_proto_rawDesc = nil
	file_comission_commission_proto_goTypes = nil
	file_comission_commission_proto_depIdxs = nil
}
